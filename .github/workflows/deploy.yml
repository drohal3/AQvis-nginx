name: Deployment pipeline

on:
  push:
    branches: [ main ]
jobs:
  publish-ecr:
    name: Publish image to AWS ECR
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-central-1'
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: aqvis-nginx
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$REPOSITORY .
          docker push $ECR_REGISTRY/$REPOSITORY
          echo "image=$ECR_REGISTRY/$REPOSITORY" >> $GITHUB_OUTPUT
  publish-docker-hub:
    name: Publish image to Docker Hub
    if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message),'#skip') }}
    #    needs: [ pipeline ]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout to the repository
        uses: actions/checkout@v4 # checkout to the repository
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}"
          push: true
          tags: drohal3/aqvis-nginx:latest
  notify:
    if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message),'#skip') }}
    needs: [ publish-ecr, publish-docker-hub ]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: notify success
        if: ${{ success() }}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: info
          text: New version of aqvis-nginx image published
          description: By ${{ github.triggering_actor }}
          details: Published successfully!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: notify fail
        #  TODO: fix notify on failure
        if: ${{ !success() }}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: error
          text: New version of aqvis-nginx image could not be published!
          description: Triggered by ${{ github.triggering_actor }}, commit urls ${{ join(github.event.commits.*.url, ' , ') }}
          details: Publishing Failed!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}